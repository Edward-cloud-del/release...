[package]
name = "framesense"
version = "0.1.0"
description = "AI-powered screen capture with instant insights"
authors = ["FrameSense Team"]
license = "MIT"
repository = "https://github.com/framesense/framesense"
edition = "2021"
default-run = "framesense"
tauri = "2.8"
[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.8.0", features = ["macos-private-api", "tray-icon", "image-ico", "webview-data-url"] }
tokio = { version = "1", features = ["full"] }

# Tauri plugins
tauri-plugin-shell = "2.3.0"
tauri-plugin-notification = "2.3.1"
tauri-plugin-global-shortcut = "2.3.0"
tauri-plugin-http = "2.5.2"
tauri-plugin-store = "2.4.0"

# Screen capture and image processing
screenshots = "0.7"
image = "0.24"
base64 = "0.21"

# URL encoding for inline HTML
urlencoding = "2.1"

# OCR using system Tesseract libraries (disabled for GitHub Actions)
# tesseract = "0.13"
dirs = "6.0.0"

# Authentication and HTTP client
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
jsonwebtoken = "9.2"
chrono = { version = "0.4", features = ["serde"] }
url = "2.4"
bcrypt = "0.17.0"

[target.'cfg(target_os = "linux")'.dependencies]
dbus = "0.9"

[target.'cfg(target_os = "macos")'.dependencies]
# Native macOS overlay support for optimized pooling
cocoa = "0.24"
objc = "0.2"

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
tauri-plugin-updater = "2"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
panic = "abort" # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true # Enables link to optimizations
opt-level = "s" # Optimize for binary size
